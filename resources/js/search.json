[[{"l":"Welcome","p":["✅ Your website is working.","but... this is a placeholder Welcome page.","To replace this placeholder page, create a readme.md file and add it to the root of your project.","You can name the file index.md, default.md, readme.md, or welcome.md."]},{"l":"Settings","p":["Check out the following Project settings to customize your website."]},{"l":"Set the project name","p":["Customize your Project Name by setting the title in your retype.yml file:","Or, use your logo:","Create a /static folder and then add a copy of your-logo.png file to that new folder. You can name the folder and file whatever you want, such as /images/my-logo.png."]},{"l":"Set the URL","p":["Improve your website Search Engine Optimization (SEO) by setting the url in your retype.yml file:"]},{"l":"Add top links","p":["Add custom links to the top navigation:"]},{"l":"Help","p":["Need some help with Retype?","A live support person is generally available on chat on the retype.com website.","If you find a defect or would like to submit a feature request, please create an Issue and we will investigate right away.","Do you have a general inquiry? Please feel free to contact us at hello@retype.com.","We ❤️ your feedback."]}],[{"i":"developing-workflows---introduction","l":"Developing Workflows - Introduction","p":["-- Estimation time: 4 Days","In this path you will learn how to initiate a project, and how the develop workflow works. This learning path will help you in the next learning paths and in the real life development work.","this learning path include the following modules:","Linux","Git","Linux is self learning module and after you finish it you can continue to the Git module. Git contain a small project and after you finish it you should validate your knowledge by your mentor.","Requirements:","Linux Command line interface setup","Learning objectives:","After completing this learning path, you'll be able to","Install project packages","Create a new project","Collaborate and share your code with others"]},{"l":"Next steps","p":["All best space journeys starts by Linux."]}],[{"i":"git---introduction","l":"Git - Introduction","p":["[[TOC]]","After completing this learning module, you'll be able to","Collaborate with other developers","Control the version of your code","Estimation time: 3 Days","Git is a free and open source distributed version control system.","git-tutorial","Here are some examples links:","Learning note: all links in this path are reading tutorials. You can read them but you can watch a youtube crash course on git or just play with the commands by yourself. If you find useful links, please share them with me.","Learning objectives:","Make sure you can perform all the commands live (with google help). You'll be tested on this.","Make sure you understand the learning concepts but Don't memorize them!","Send me back home","Share your code with others","The reason you are learning it is because Git is the most popular version control system in developing. It is also used in the next steps of your learning process.","Track your code changes","Youtube crash course"]},{"l":"Set up git","p":["Git is a version control system for tracking changes in files and coordinating work among multiple people."]},{"l":"Install git","p":["Open Terminal and enter:","check if git is installed:","(If you don't use WSL look up how to install git on windows)"]},{"l":"Git config file setup","p":["The Git configuration file contains a number of variables that affect the Git commands' behavior. The .git/config file in each repository is used to store the configuration for that repository, and $HOME/.gitconfig is used to store a per-user configuration as fallback values for the .git/config file.","We will use this git-config to set up the Git configuration file.","Replace Your Name with your preferred username:","Replace youremail@domain.com with your email:","Attached to this project is my .gitconfig file. You can use it to build your awesome .gitconfig! Don't forget to share it with me. \uD83D\uDE02"]},{"i":"configure-connection-with-the-remote-recommended","l":"Configure Connection with the remote (Recommended)","p":["Git uses several protocols for client-server communication. SSH and HTTPS are secure protocols. As a result, many git servers, such as Github, Bitbucket, and GitLab, use those two popular cryptographic network protocols."]},{"l":"HTTPS","p":["HTTPS is a secure version of HTTP that encrypts data transmitted between the client and the server.","Starting git with HTTPS for cloning, pulling, and pushing is much easier and can be done with much less setup.","If you use HTTPS URLs on the command line to get a remote repository, git fetch, git pull, or git push, git will ask for a username and password."]},{"l":"SSH","p":["SSH means \"Secured Shell\". It is also a secured version, where data sent between the client and server is encrypted.","How does SSH work? (Enrichment - Optional)"]},{"l":"Create a new SSH key","p":["Open terminal and type:","Press Enter. Output similar to the following is displayed:","Accept the suggested filename and directory.","Specify a passphrase if you like.","A public and private key are generated. Add the public SSH key to your Remote account and keep the private key secure."]},{"l":"Add the public SSH key to gitlab","p":["(In github and bitbucket the process is the same)","You can read this for more details: add-an-ssh-key-to-your-gitlab-account.","Copy the contents of your public key file","Your avatar > Preferences > SSH Keys > Add SSH Key","Paste the contents of your public key file into the key box.","In the Title box, type a description, like Work Laptop","Verify that you can connect using ssh!"]},{"l":"Git basics","p":["Learn the basic git commands and how to use them.","Try it yourself! Init a git repo and create commits and branches. merge them and play with the git commands.","Understanding the practical use of git will help you to understand the next steps. In the next chapter we dive more deeply into the concepts."]},{"i":"game-time-optional","l":"Game Time (optional)","p":["If you like to learn by a game, you can try this one:","learn git branching"]},{"i":"git-basic-uint---the-commit","l":"Git Basic uint - The commit"},{"l":"Commits creation","p":["Make sure you know the following commands:","add","commit","log","status","diff","stash"]},{"l":"Commit message convention","p":["Commits messages have two parts:","The title","The body","The body is optional. Even though I think it is a good idea to write a body, most of the time the message is only the title.","There is several conventions for commit messages but they Follow the same general rules.","Here is our convention for commits title:","Commit messages start with a Capital letter - Add commit message(not add commit message)","Commit messages start with a verb - Add text1(not Text1 commit)","The verb should be present-tense, imperative-style - Fix bug x(not Fixing bug x, Fixed bug x) - an explanation for people who hate present-simple: Think: 'If I use the commit I will ... (Add a feature, fix a bug etc.)","Note: It is often helpful when you are creating temporary commits to write down for yourself that they are temporary and what for. For example:","That way it is easier to perform rebases."]},{"i":"questions---commit-creation","l":"Questions - Commit Creation"},{"l":"Commit Hash","p":["What is the commit hash?","How is it made?","Based on the previous question, what can change the commit hash?","So, What is the point of this hash recipe?"]},{"l":"Commit code","p":["How much code should be in one commit?","Can the same code be in different commits?"]},{"l":"Commit Workflow","p":["How do I commit changes to previous commits?","When should I commit?","How can I see what's added in each commit?","commit VS stash:","What's the benefit of commit? What's the benefit of stash?","Based on the previous question, when should I use which one?"]},{"l":"Moving Pointers in git","p":["Make sure you know the following commands:","checkout","switch","restore","rm","reset","revert","reflog"]},{"l":"Undo a git operation","p":["Many think that git reflog operates kind of like ctrl-z- undo situation. This is not the correct way to think about it. And it becomes impossible to track all the git operations in reverse order.","Think about the reflog as a list of pointers and hints about what was \"saved\" in them. For example, if you lost a pointer for a commit, look for a git operation that represents the commit like commit or checkout."]},{"i":"questions---moving-pointers","l":"Questions - Moving Pointers"},{"l":"Delete commit","p":["How do I delete a commit?","What are the three types of reset? when should I use each one?","What's the difference between reset revert rm and restore?","Why should I never want to use revert?"]},{"l":"Pointers","p":["What does git save in order to manage the version control?","What is HEAD? How do I change it? What is HEAD^^ and HEAD~2?","How does branching works? Why is it implemented that way?","How do I move a branch to point to a specific commit in my history?","How do I move a branch to a different pointer (What can be a pointer for this)?","Can reset add code to my HEAD? Can it add a commit?","What happens to the commit when I reset them?"]},{"l":"Undoing reset","p":["How do I undo a reset when I have the pointer?","How do I undo a reset when I don't have the pointer?"]},{"i":"compose-commits---branches","l":"Compose commits - branches","p":["make sure you know the following commands:","checkout","branch","merge","rebase"]},{"i":"questions---compose-commits","l":"Questions - Compose commits"},{"l":"Branches","p":["What is a branch? What should be in a branch?","What is master/ main? For what purpose they are used?"]},{"l":"Union of branches","p":["What is the difference between merge and rebase?","What is the benefit of merge? What is the benefit of rebase? You can use this topic in your answer:","Creation and Conflict resolution","Undoing the union","History changes","History log (story-telling)","Based on the previous question, when should I use which one?","When are the merge and rebase results are the same?"]},{"l":"Conflicts","p":["What are conflicts? When do they happen?","How do I resolve conflicts?"]},{"l":"Modified commits","p":["How can I modify a commit in the branch's history?","Is it possible to modify a commit in the history by using reset? how? why?","How can modified commits can be scaled? What will happened when there are large changes to multiple files across multiple commits in a large code-base?","If you don't understand this question, we will return to it in the Project chapter."]},{"i":"vs-code-gui---git-optional","l":"VS Code GUI - Git (Optional)","p":["Learn how to use the GUI of git. You can read this article version control git-support.","How do I add, commit and reset from the VS code GUI?","How do I diff changes?","How do I solve conflicts in the VS code editor?","You can use the VS code GUI according to your comfort."]},{"l":"Git Workflow","p":["Make sure you know the following commands:","remote","push, --set-upstream","pull","fetch","clone","fork"]},{"l":"Workflow"},{"l":"Start working on a git project","p":["It's better to initialize a project on the remote. The remote offers an initializing commit and basic README.md file. Some remotes offer more standardized files depending on the language.","Whether you have a git project or not, you can start working on it by cloning the project on your computer."]},{"l":"Develop on your local machine","p":["Start a \"split\" in the history of main branch by using:"]},{"l":"Branch Names","p":["There is no branch naming convention and it depends on the team and the project. But it is a good idea to use meaningful names which everyone will understand and can tell by the name what the branch is for.","For example, dev and dev2 are not such great names for a branch...","Sometimes there is a \" master\"-like branch. which is used for the main development branch. Usually named dev or development, but make sure to protect this branch from unwanted pushes and irresponsible behavior.","Side-note: If you have tab completion for the branch names then it is fine to use long branch names, but if not it is recommended to keep them short.","Regularly push your work to the remote- The rule is that you should loose your computer always without sorry about your work (Bummer for your computer)."]},{"l":"The main branch","p":["Never Work on the main branch!","The main branch is the operational branch. It is the \"production-like\" code - that is being used by others so if you change the history, it can break other's systems and create conflicts if they are developing on parallel branches. Code can't just be pushed into this branch. (You can define in the remote that nobody is allowed to push to this branch).","In order to enter the main branch, you need to Request a merge! this process is called \"Merge Request\"(on Gitlab) and \"Pull Request\"(on GitHub) and shortly called \"PR\"."]},{"l":"Reviewing","p":["After you have requested a merge, you can see a PR (MR) in the \"Pull/Merged Requests\" tab. Usually someone will review your MR and review your code. this process called \"Code Review\" or \"CR\".","The code review is important to keep the shared code clean and without bugs. Also it is the best way to learn and evolve as a developer! don't be afraid to get a criticizing review, but also don't be shy to answer and argue about comments that you don't agree with (or understand). The final decision is to the code maintainer (sometimes that is you), but your opinion is important.","NOTE: In some agile ci-cd methodologies, the code review is skipped, and instead comments become future issues. There are benefits and drawbacks to this methodology. Can you tell what is the best for you?"]},{"l":"Fixing Code","p":["After you get a code review, you can fix the code.","Fix the code in the same branch, and the corresponding commit!","NOTE: Sometimes the maintainer will ask for new commits that fix the code review. This is fine and recommended but it demands to squash those commits before merging","After the fixing and committing you can push your changes to the remote to same branch. The PR is automatically updated."]},{"l":"Rebasing","p":["Sometimes while coding and reviewing, and fixing, the main branch is updated, and may cause conflicts. Even when there are no conflicts, our PR branch needs to have linear history compered to the main branch.","To organize the commits of our PR we will need to pull the origin main branch, and rebase with it.","There is a one line command for this (make it alias!)"]},{"i":"review-again","l":"Review, again","p":["After pushing the rebased branch to the remote (Which will update the PR), the code will be reviewed again.","This is an iterative process of Review- Fix- Rebase until The maintainer decides to accept the PR."]},{"l":"Fixing code that is already in the main branch","p":["Sometimes there is a bug or code that needs fixing in the main branch. In these cases we will create a new branch and fix the code. In very rare cases the maintainer will revert the merge request commit!"]},{"i":"questions---git-workflow","l":"Questions - Git Workflow"},{"l":"Remote code","p":["What is \"Remote\"? what is origin?","How can a project can have multiple remotes?","How does origin/branch can differ from branch? How do you set them back?","How does the local repo \"know\" that something happened in the remote?"]},{"i":"git-workflow-1","l":"Git Workflow","p":["What is the main(pun intended) purpose of the workflow process?","When do I use the merge command locally? why?"]},{"i":"git-aliases-optional","l":"Git aliases (optional)","p":["make sure you know the following commands:","config"]},{"i":"question---git-aliases","l":"Question - Git aliases","p":["What is git alias?","How do you show all git aliases?","Lets go meta! - make an alias to show all git aliases \uD83D\uDE04","What is .gitconfig? Where is it located?","What is !git in the .gitconfig?","Attached to this project is my .gitconfig file. You can use it to build your awesome .gitconfig! Don't forget to share it with me. \uD83D\uDE02"]},{"i":"wrapping-up---git-project","l":"Wrapping Up - Git Project","p":["Add .gitignore file to the project. add private-ideas to the .gitignore file.","Add 3 files with page-n.md(in the workspace dir) with n represent the page number.","Add a line ## What happens to the spaceship? and amend it to previous commit.","Add a new line to this page with the text This is page 3 - chapter 2 and Commit it with the message Add a mistake.","Add book body","Add book body: \"New Line Should start with a Capital letter I\", \"Add period at the end of the sentence\", \"Change commit message to Add book content\"","Add book end","Add book end: \"```suggestion:-0+0The End```\"","Add book title","Add book title: \"Book title should be in Capital letters Space Book\"","Add file name this_is_not_a_book.txt and commit it.","Add the code to page-3:","Add this text to the last commit. Prove yourself that all the pages in the right commit.","Add this text to the readme:","Approve the PR after you put chapter-9 on top of origin\\main branch.","Approve the PR.","As we learned in Workflow we don't merge local branches into the main branch. Set back main to point on origin/main","At the end of page 3, add this text # The spaceship is gone!","Change the name of the last commit to Add page 3 to chapter 2.","commit it with appropriate message.","Commit the code to page-3 with temp name like fix page-3(Or FIXUP page 3).","Commit the fix to page-2 with temp name like fix page-2(Or FIXUP page 2).","Commit the readme into three corresponding commits.","Copy the commit Add a mistake to chapter-3 branch. Resolve the conflict by accepting the all page-3. checkout to the main and print all the commits in the graph.","Create 3 corresponding commits.","Create a file named page-4.md, add a line # page-4 and commit it.","Create a file named page-4.md, add a line page 4 and commit it.","Create a new branch called chapter-1 from the main branch.","Create a new branch called chapter-2, which will point on the chapter-1 branch.","Create a new branch called chapter-3, which will point on the chapter-1 branch.","Create a new branch called chapter-4, which will point on the chapter-3 branch.","Create a new branch called chapter-5 which will point on the Add a mistake commit.","Create a new branch called chapter-6 which will point on the chapter-1.","Create a new branch called chapter-6-ver-2 which will point on the chapter-1 branch.","Create a new branch called chapter-7 which will point on the chapter-6.","Create a new branch called chapter-7-ver-2 which will point on the chapter-6-ver-2.","Create a new branch called chapter-8 which will point on the main. (As usual workflow)","Create a new branch called chapter-9 which will point on the chapter-7.","Create new dir named private-ideas.","Delete all the content of the README.md file.","Epilog:","Fix the bug in page-2. Add this clever code to page-2:","Fix the commit in respect to the feedback.","General hint: Note that all chapter follow the order of this tutorial, and you can use the \"Learning Topic\" link at every chapter.","Go to the pr and give yourself some feedback! Comment on each commit the following:","How was your story?? I hope its look like this:","I must be a real dumb, i meant to rebase chapter-7 on top of chapter-7-ver-2. Fix it. ( Hint: you don't have to use reflog)","If not it is ok! After all this is your book...","If not it is ok! Do not continue... Just make it look like this.","Init a new project on the remote, and clone it locally.","Lets write Space Book!","Log the all history with a graph. look at HEAD, and the branches pointers.","Log the all history with a graph. Notice that Chapter 7 is now in the same as Chapter 6 in section 5.","Log the all history with a graph. Your graph should look like this:","Log the all history without a graph, Your graph should look like this:","Log the all history without a graph. What is the \"story\" log of the main branch?","Log the history of chapter-7 and chapter-6. Compere them and answer the question union-of-branches again.","Make a branch called chapter-4-ver-2 which will point on the chapter-4 branch.","Make Chapter 3 empty with no commits expect Initial commit.","Make chapter 4 point on chapter 2.","merge chapter-5 into main branch. What is the merge commit?","merge chapter-6 into chapter-5 branch. Resolve the conflict.","merge chapter-6 into chapter-6-ver-2.","Nice! push your branch to the remote.","Now we will use more robust way to modify commits. Let's say we have a huge bug in page-2, and some code to add to page-3.","Oh no! I was confused between chapter-4-ver-2 and chapter-4. Silly me.","Oops this is a mistake. Who could know! I forgot that this new line souled be in the commit Add page 3 to chapter 2. My bad... Fix it.","Open a PR from chapter-8 to main.","Organize your commit (Do you have redundant commits that need a squash?).","Pull the main.","Push the branch chapter-8 to the remote.","Push the branch chapter-9 to the remote, and make a PR from chapter-9 to main.","rebase -i with fixup ( f) option and inject the fixes commit in the right places.","Rebase chapter-7-ver-2 on top of chapter-7. Resolve the conflict.","reset --hard the last commit( Merge branch 'chapter-6-ver-2' into chapter-6).","Reset (hard) the last commit to Add page 3 to chapter 2.","Resolve conflict such that page 4 look like this:","Sorry, I meant to merge chapter-6-ver-2 into chapter-6. Why, it's a problem? Fix it.","Swap the chapter-4-ver-2 and chapter-4 branches. Do not create a new branch!","We will rebase it instead of merging (As one should).","What is the last shared commit between chapter-8 and origin/chapter-8?","Write Chapter 1:- Learning Topic","Write Chapter 2:- Learning Topic","Write Chapter 3:- Learning Topic","Write Chapter 4:- Learning Topic","Write Chapter 5:- Learning Topic","Write Chapter 6:- Learning Topic","Write Chapter 7:- Learning Topic","Write Chapter 8:- Learning Topic","Write Chapter 9:- Learning Topic","Write Prologue:- Learning Topic","Your graph should look like this:"]},{"l":"Exam","p":["Talk to your mentor about the exam."]},{"l":"Worth knowing","p":["These concepts are worth mentioning but don't learn them now.","Tagging",".gitattributes","worktree","sparse-checkout- Blog Post","Submodules"]},{"l":"Next Steps","p":["Congratulations! You have completed the Git module. now you can control the source code of your space \uD83D\uDE04","Here is the next Learning Path"]}],[{"i":"linux-module---introduction","l":"Linux module - Introduction","p":["-- Estimation time: 1 Day","[[TOC]]","After completing this learning module, you'll be able to","Configure Aliases","Configure permissions","Connect to different remote servers","Here is some examples links:","Install and uninstall packages","Learning note: all links in this path are reading tutorials. You can read them but you can watch a youtube crash course on Linux or just playing with the commands by yourself. if you find useful links, please share them with me.","Learning objectives:","Linux Basic Tutorials","LINUX is an operating system or a kernel distributed under an open-source license.","Make sure you understand the learning concepts but Don't memorize them!","Navigate the Linux file system from the command line","Send me back home","The reason you are learning it is because most of our app run on Linux. Also, linux offers a lot of features that are not available on other OS","Youtube crash course"]},{"l":"Basic Commands Line","p":["Learn the Basics of Linux commands line.","(Don't memorize)","Relative and absolute paths","cd, pwd, ./, ../, ~","touch, mkdir, rm","mv, cp","cat, less, pr","sudo","man, --help","history, clear","grep, sort","Wild cards","Piping and redirection","You can read this tutorial: command-line-for-beginners."]},{"l":"Install and uninstall packages","p":["Learn about the apt package manager.","package manager","apt apt-get","install, remove, and upgrade packages","You can read this article: how-to-use-apt-command."]},{"l":"Windows Vs Linux","p":["Learn the differences between Windows and Linux.","Linux files structure","You can read this article: linux-differences."]},{"l":"File Permissions in Linux","p":["Learn about Ownership, and Permissions in Linux.","Ownership: Owner, Group, Others","Permissions: Read, Write, Execute","chmod, chown","you can read this article: file-permissions."]},{"l":"Environment variables","p":["Learn about Environment variables in Linux.","What are Environment variables?","$PATH","Set and delete environment variables","Access environment variables","you can read this tutorial: linux-environment-variables."]},{"l":"Linux Networking Commands","p":["Read about these linux basic networking commands:","ssh","ping"]},{"l":"Aliases","p":["Learn about Aliases in Linux.","alias","Creating Permanent Aliases","What alias do you currently have? Write your own aliases in Linux!"]},{"l":"Links","p":["Learn about linux links","ln","You can read this article creating-soft-link-or-symbolic-link"]},{"i":"wrapping-up---mission-optional","l":"Wrapping up - mission (optional)","p":["Create new directory inside your home directory named /Workspace/test in one command.","Rename the directory to LinuxTest.","Create 3 files inside the LinuxTest directory called test1.txt, test2.md, and test3.","Write text in test1.txt with echo command.","Write 10 line text in test2.md with nano command.","Write text in test3 with vi command. Do you now how to quit?","Show the content of test1.txt with cat command.","Show the first 3 line in test2.md.","Change permissions of test1.txt so that you cant read it, then show the content of test1.txt again.","Count the unique lines in the file test2.md.","Create a link to your Windows desktop called Desktop inside $HOME dir."]},{"l":"Worth knowing","p":["These are concepts that are good to know they exist, but you don't need to learn them right now.","Find","service","curl","Space usage","Mounts","Process commands","Cronjobs","Shell Scripting"]},{"l":"Further learning","p":["The art of the command line"]},{"l":"Next steps","p":["Congratulations! You are now Can use linux in your next space mission!"]}],[{"l":"Azure Cloud","p":["Under construction..."]}],[{"l":"Docker","p":["Under construction..."]}],[{"l":"Github Actions","p":["Under construction..."]}],[{"l":"Node JS","p":["-- Estimation time: 14-22 Days","After completing this learning path, you'll be able to:","Asynchronous NodeJS and JavaScript","Create a backend service","Create a new project","In this path you will learn how to install Node JS, and how to use it in a project.","Install NodeJS project packages","JavaScript","Learning objectives:","Linux Command line interface setup","Node JS is a JavaScript runtime built on Chrome's V8 JavaScript engine.","Node Project - Call Of Duty","Requirements:","this learning path include the following modules:","This learning path will help you in the real life development work. After you finish this learning path you will be able to code backend systems and services in Node JS.","TypeScript","You will learn javascript and node basics, clean code principles, testing, and then you will learn how to use Node JS in \"real\" project."]},{"l":"Next steps","p":["Take a deep breath and click here to start the first module."]}],[{"l":"Asynchronous NodeJS and JavaScript","p":["Estimation time: 1-4 Days","This learning path will teach you how to write asynchronous code in JavaScript and Node.js.","Learning objectives:","At the end of this learning path, you'll be able to:","Write an efficient asynchronous code","Use the async and await keywords","Write scalable and performant code","Send me back home","[[TOC]]","Learning note: all links in this path are reading tutorials. You can read them but you can watch a youtube crash course. if you find useful links, please share them with me.","Here is some examples links:"]},{"l":"Asynchronous in JavaScript","p":["Asynchronous programming is a technique that enables your program to start a potentially long-running task and still be able to be responsive to other events while that task runs, rather than having to wait until that task has finished. Once that task has finished, your program is presented with the result.","Many functions provided by nodeJS and browsers can potentially take a long time and therefore, are asynchronous.","After each mini chapter in this path, create a \"Pull Request\" and/or talk to your mentor to validate your knowledge."]},{"l":"Introduction","p":["We will learn a several techniques to make our programs asynchronous. Some of these techniques are legacy and not recommended for new projects but they are still important to understand.","Read the following script:","What do you think will be the output?","Create a intro.js file and run it in the terminal.","What is the output? why?"]},{"l":"Callbacks","p":["A callback function is a function passed into another function as an argument, which is then invoked inside the outer function to complete some kind of action or job.","Here is a example to synchronous use of callback function:","Or in anonyms arrow function style:","The callback itself can have inside it another callback function:","However, callbacks are often used to continue code execution after an asynchronous operation has completed - these are called asynchronous callbacks.","Its is often to named callbacks function done- Because we are calling them when the operation done:"]},{"l":"Execution order","p":["Lets fix the above intro.js script by adding a callback function.","Create a callbacks-logging.js.","Change the logAfterMs function to accept a callback function as a the last argument:","Write a code that log the string 1 after 0 ms.","Write a code that log the string 2 1 ms after the log 1 above has finished.","Write a code that log the string 3 10 ms after the the log 2 above has finished.","Write a code that log the string 4 5 ms after the the log 3 above has finished.","Write a code that log the string 5 after all the logs.","Commit and push your changes."]},{"l":"Error Handling","p":["In Node.js, it is considered standard practice to handle errors in asynchronous functions by returning them as the first argument to the current function's callback. If there is an error, the first parameter is passed an Error object with all the details. Otherwise, the first parameter is null.","Here is an example with synchronous code:","We want to be able to handle errors in our logging code workflow.","Here is a function that simulate a logging that may fail:","Create a maybeLogAfterMs function that simulate a logging that may fail.","Lets say the 3 logging may fail.","Replace step 3 (logging 3) with this maybeLogAfterMs function.","Handle the error:","If the error is thrown, log the error and stop the execution.","If the error is not thrown, log the string 4 as usual and continue to step 5.","Commit and push your changes."]},{"l":"Pass data","p":["We want our code to pass results from async operations to other.","Lets say the 3 logging need to pass the chance of the error to the 4 logging after successful logging.","Update the maybeLogAfterMs function to call the callback function with the chance of the error. Don't forget that callback first argument is the error! (How do you pass no error?)","Handle the results in step 4:","If the results is bigger then 0.8 log 4: This is very rare!","If the results is smaller then 0.8 log 4: This is very common!","Print the 5 logging after random(from step 3) seconds.","Commit and push your changes."]},{"l":"Concurrent execution","p":["We want to be able to run multiple async operations in parallel. Lets say that after the 4 logging we want to print the 5 logging and in concurrent run functions that logs the string hi 5 after 5 ms and take 5 after 6 ms.","Create a function that after 5 ms logs the string Hi five","Create a function that after 6 ms logs the string Take five","Execute the 5, Hi 5, Take 5 functions logging after the 4 logging in concurrent.","Commit and push your changes."]},{"i":"after-concurrent-execution---optional","l":"After Concurrent execution - (Optional)","p":["We want to be able to run async operations after parallel execution is done. Lets say that after the step 5 (logging 5, Hi five, Take five) we want to log 6 after 10 ms;","How do you implement a job after \"Parallel\" execution?"]},{"i":"callbacks---questions","l":"Callbacks - Questions","p":["What is the advantage and the disadvantage of using callbacks as a solution for the async problem?","When do you think this solution will be useful?","What is callback hell?"]},{"i":"callbacks---worth-knowing-optional","l":"Callbacks - Worth Knowing (Optional)","p":["These topics are not covered in this chapter but is worth knowing:","Async.js"]},{"l":"Promises","p":["A Promise is an object representing the eventual completion or failure of an asynchronous operation.","Aren't promises just callbacks with .then()?","Commit and push your changes.","Create a maybeLog function that returns a promise that simulate a logging that may fail.","Create a promise-logging.js.","Handle the error:","Handle the results in step 4:","Here is a basic example using function that \"generates\" a promise:","Here is an example utilizing reject:","If the error is not thrown, log the string 4 as usual and continue to step 5.","If the error is thrown, log the error and stop the execution.","If the results is bigger then 0.8 log 4: This is very rare!","If the results is smaller then 0.8 log 4: This is very common!","Lets create the infamous logging example using promises.","Most of the time, you will consume an a already-created promises, but it important to understand how to create a promise.","Once a promise has been called, it will start in a pending state. This means that the calling function continues executing, while the promise is pending until it resolves, giving the calling function whatever data was being requested.","Replace the maybeLog function with function that resolve with the random number (like the callback example).","The created promise will eventually end in a resolved state, or in a rejected state, calling the respective callback functions (passed to then and catch) upon finishing.","Well, .then() and .catch() always return Promises. That enables us to create arbitrary long chains of method calls:","Write a code that does the same as the code in Callbacks Concurrent execution but using promises. You may add the After Concurrent job.","Write a code that does the same as the code in Callbacks Error Handling but using promises.","Write a code that does the same as the code in Callbacks Execution order but using promises. Commit and push your changes.","Write a code that does the same as the code in Callbacks Pass data but using promises."]},{"i":"promises---questions","l":"Promises - Questions","p":["What is the advantage and the disadvantage of using promises as a solution for the async problem?"]},{"i":"promises---worth-knowing-optional","l":"Promises - Worth Knowing (Optional)","p":["These topics are not covered in this chapter but is worth knowing:",".finally()","util.promisify()"]},{"l":"Async Await","p":["Async Await is a new way to write asynchronous code and is kind a\"syntactic sugar\" for promises. Moreover it is has a better DX (async stack trace support and debug step through)","An async function is a function declared with the async keyword, and the await keyword is permitted within it. The async and await keywords enable asynchronous, promise-based behavior to be written in a cleaner style, avoiding the need to explicitly configure promise chains.","Here is a basic example:","Lets refactor the promise-logging.js using async await:","Create a async-await-logging.js.","Change the setTimeout to promise based using node:timers/promises:","Write a code that does the same as the code in Callbacks Execution order but using async-await. Commit and push your changes.","Write a code that does the same as the code in Callbacks Error Handling but using async-await. Commit and push your changes.","Write a code that does the same as the code in Callbacks Pass data but using async-await. Commit and push your changes.","Write a code that does the same as the code in Callbacks Concurrent execution but using async-await. You may add the After Concurrent job.","Commit and push your changes."]},{"i":"async-await---questions","l":"Async Await - Questions","p":["What is the advantage and the disadvantage of using async await as a solution for the async problem?","Should we use await inside for or while loop?","Should we use await inside a forEach loop?"]},{"i":"async-await---worth-knowing-advanced","l":"Async Await - Worth Knowing (Advanced)","p":["These topics are not covered in this chapter but is worth knowing:","Top level await","Async Iterators ( for await)","return await in async function"]},{"l":"Promise functions","p":["The Promise class has static combinator functions that help us work with arrays of promises."]},{"i":"promiseall","l":"Promise.all()","p":["Promise.all() is a function Which get array of promises and returns a single Promise which is:","Fulfilled with the array of the fulfillment values of the input promises.","Rejected if at least one Promise is rejected. The value is the rejection value of that Promise.","Something like this:","More accurate in typescript syntax (Advanced):","Promise.all is important because it let us execute concurrent jobs on arrays using asynchronous .map().","Here is an abstract Example:","Let's create an practical example!","downloadText() uses the Promise-based fetch API to download a text file into a local directory called downloads.","Create a function called downloadTextFiles which get an array of urls and download all the files into the downloads directory.","Add log before and after each download, and after all downloads are done.","What is the execution order of the logs?","Test your function using this example:"]},{"i":"promiseallsettled","l":"Promise.allSettled()","p":["Promise.allSettled() is a function Which get array of promises and returns a single Promise which is fulfilled when all promises are settled.","The fulfillment value is an array of the objects with the result of the promises.","Something like this:","More accurate in typescript syntax (Advanced):","Wow, this looks pretty exhausting. Why using Promise.allSettled() instead of Promise.all()?","Unless there is an error when iterating over promises, the output Promise is never rejected. This lets us execute asynchronous functions in concurrent using map() without throwing if some \"jobs\" failed.","Lets fix the downloadTextFiles to use Promise.allSettled() instead of Promise.all().","After the download is finished, print the number of failed downloads and the reason for the failure.","You can test your function using this example:","should print after all downloads are done:"]},{"i":"short-circuiting-with-promises-advanced","l":"Short circuiting With Promises (Advanced)","p":["Sometimes we want to stop executes all \"jobs\" when an error ocurred.","Can we use Promise.all()? test it with the previous example.","Create a function called downloadAllTextFiles which get an array of urls and download all the files into the downloads directory.","Add log before and after each download, and after all downloads are done.","Stop the execution if there is an error.","Did you run all jobs concurrently?"]},{"i":"promise-functions---worth-knowing","l":"Promise functions - Worth Knowing","p":["These topics are not covered in this chapter but is worth knowing:","Promise.race()","Promise.any()"]},{"i":"event-handlers-optional","l":"Event handlers (Optional)","p":["NOTE: I recommend to advice with your mentor if you should learn this section and how much time you should spend on it.","Node.js is famous for its asynchronous and event-driven nature.","Node has a built-in event emitter that allows us to create event-driven programs using the events module.","Here is a basic example:","An event handler is a particular type of callback.","Usually we prefer using promises to handle async operations but event handlers are still useful in some cases.","Lets create the callbacks-logging.js using event handlers.","Create a event-handler.js.","Write a code that does the same as the code in Callbacks Execution order but using event handlers.","Commit and push your changes.","Write a code that does the same as the code in Callbacks Error Handling but using event handlers.","Write a code that does the same as the code in Callbacks Pass data but using event handlers.","Write a code that does the same as the code in Callbacks Concurrent execution but using event handlers. You may add the After Concurrent job."]},{"i":"event-handlers---questions","l":"Event handlers - Questions","p":["What is the advantage and the disadvantage of using event handlers as a solution for the async problem?","When do you think this solution will be useful?"]},{"i":"event-handlers---worth-knowing-optional","l":"Event handlers - Worth Knowing (Optional)","p":["These topics are not covered in this chapter but is worth knowing:","captureRejections and async event handlers (not recommended)"]},{"i":"wip-advanced-topics-advanced","l":"WIP: Advanced Topics (Advanced)","p":["If you finish the above exercises in the \"Estimation time\" you can move on to the advanced topics.","this is a work in progress and will be updated soon."]},{"i":"nodejs-event-loop","l":"Node.js Event Loop","p":["What the heck is the event loop anyway? | Philip Roberts | JSConf EU","The Node.js Event Loop, Timers, and process.nextTick()","Don't Block the Event Loop (or the Worker Pool)","process.nextTick queue, promises microtask queue, macrotask queue"]},{"l":"Next steps","p":["I Want YOU To Join The Army."]}],[{"i":"call-of-duty---duties-scheduling-system","l":"Call Of Duty - Duties scheduling system","p":["Estimation time: 20-30 Days","In the 'Call Of Duty' project, you will be managing soldiers and duties using a database and a RESTfull API server.","Call of Duty","Send me back home","[[TOC]]"]},{"l":"Instructions"},{"i":"pre---requirements","l":"Pre - requirements","p":["Before you start make sure you familiar with these concepts:","Web Server","HTTP","Database","Unit Testing"]},{"l":"General Guidelines","p":["The database should be a non relational database.","The API server should be a RESTfull API server.","You should test the project, and the coverage of the tests should be high as possible.","You should PR Each task in the project.","Log your logic and errors.","The Commits separation decision is up to you."]},{"l":"Recommended Technologies","p":["You can choose which technologies you want to use for this project, but ask your mentor before choosing. Here is my recommended technologies:","Language: JavaScript or TypeScript","Server: fastify or express 5.x API","Test: Vitest or Node Test Runner or Jest","Database: MongoDB","Don't use Mongoose ODM, use MongoDB Node Driver. You can read more about it in the mongoose-vs-nodejs-driver article.","Logger: fastify built-in pino logger or pino or winston.","Schema validator: fastify built-in ajv validator or Ajv or Joi. If you using Typescript have a look at Runtime checks with TypeScript section.","Package Manager: npm or pnpm","Linter: eslint using airbnb style guide or XO style guide, or Biome linter and formatter.","Optional:","prettier","Cspell"]},{"l":"Models","p":["Your DB Will contain 2 collections:","Soldiers:","Duties:"]},{"i":"task-1---health-check","l":"Task 1 - Health Check","p":["Add \"pino-pretty\" to your project (dev only) to format the logs.","Add lint script to your package.json file.","Add linter to your project.","Connect to the database using the connection string from ENV var.","Create a database connection.","Create a db health check endpoint:","Create a health check endpoint:","Create a server and an app.","Create a test for your health check endpoint.","Create app.js file.","Create server.js file.","Estimation time: 3 Days","GET /health","GET /health/db","listen on port from ENV var and the default port should be 3000.","Log your app and server.","Return a 200 status code if the database is connected.","Return a 200 status code if the server is running.","Return a JSON response: {status: ok}","Run the script before submit any merge request.","Run your app and test it using curl command:","Separate application code from the server code (Why?):","Test your app and server.","The connection should be closed when the server stops listening.","The connection should be established before the server starts listening.","The log-level should be configurable, and the default level should be info. In the test environment, the default log level should be silent.","What is the coverage of your tests?","What is the coverage of your tests? Did you test the error case?","You can also use Postman, or any other tool you like (such as hoppscotch, Insomnia or Thunder Client vscode extension).","You can use \"HTTP injection\" (Fastify built in app.inject function)."]},{"i":"task-2---soldier","l":"Task 2 - Soldier","p":["0","1","2","3","4","5","6","A search query can be passed as a query parameter. For example: a request to /soldiers?name=david should return all soldiers (as an array) with the name 'david'.","Add the createdAt and updatedAt properties and initialize them to the current date.","captain","colonel","corporal","Create endpoint for creating a new soldier:","Create endpoint for deleting a soldier:","Create endpoint for getting a soldier:","Create endpoint for getting all soldiers:","Create endpoint for updating a soldier:","DELETE /soldiers/:id","Do not allow this method to add any new properties nor to alter the _id.","Estimation time: 4 Days","Example: a request to /soldiers/0112358 should return the soldier with id 0112358(if exists).","GET /soldiers","GET /soldiers/:id","If you using fastify (and you should) Add schema also for the response (Why?).","lieutenant","major","Optional: Create endpoint for \"pushing\" new limitations to a soldier:","PATCH /soldiers/:id","POST /soldiers","private","PUT /soldiers/:id/limitations","Rank Name","Rank Value","Return a 200 status code if the soldier is found.","Return a 201 status code if the soldier is created.","Return a 204 status code if the soldier is deleted.","Return a 404 status code if the soldier is not found.","Return the inserted Soldier.","Return the updated Soldier with a 200 status code if the soldier is updated.","Save the limitations in lower case.","sergeant","The _id should be the soldier's private tt number - a 7 digits number.","The body will include a Soldier object.","The body will include an array of limitations.","The body will include the following parameters:","The limitations will be added to the soldier's limitations array.","The name should be a string with length between 3 and 50.","The rank can be passed as rankValue or rankName. For example: a request to /soldiers?rankValue=3 should return all soldiers (as an array) with the rankValue 3. For example: a request to /soldiers?rankName=lieutenant should return all soldiers (as an array) with the rankName 'lieutenant'.","The rankValue should be a number between 0 and 6. Use the following table to convert the number to the rank name:","The updated properties will override the existing ones.","The updated Soldier will be an object and should contain the updated properties only.","Update the updatedAt property to the current date.","Validate that all the above parameters exist, any other property is invalid.","When searching by limitations, the query should be an array of limitations. For example: a request to /soldiers?limitations=food,standing should return all soldiers (as an array) with the limitations 'food' and 'standing'."]},{"i":"task-3---duty","l":"Task 3 - Duty","p":["A search query can be passed as a query parameter. For example: a request to /duties?name=hagnash should return all should return all 'hagnash' duties (as an array).","Add the soldiers property and initialize it to an empty array.","Add the status property and initialize it to unscheduled.","Add the statusHistory property and initialize it to an array with the current status and date.","All the above parameters exist, minRank and maxRank are optional. Any other property is invalid.","Create endpoint for creating a new duty:","Create endpoint for deleting a duty:","Create endpoint for getting a duty:","Create endpoint for getting all duties:","Create endpoint for updating a duty:","DELETE /duties/:id","Do not allow this method to add any new properties nor to alter the id.","Estimation time: 4 Days","Generate a unique _id for the object (MongoDB will do it for you).","GET /duties","GET /duties/:id","location is a valid GeoJSON Point.","minRank and maxRank if exists are numbers between 0 and 6.","name is a string with length between 3 and 50.","Optional: Create endpoint for \"pushing\" new constraints to a duty:","PATCH /duties/:id","POST /duties","PUT /duties/:id/constraints","Return a 201 status code if the duty is created.","Return the inserted Duty.","Return the updated Duty with a 200 status code if the duty is updated.","Return the updated Duty.","Scheduled duties cannot be removed.","Scheduled duties cannot be updated.","startTime is before the endTime and that the startTime is in the future.","The body will include a Duty object.","The body will include an array of constraints.","The body will include the following parameters:","The constraints will be added to the duty's constraints array.","The updated Duty will be an object and should contain the updated properties only.","The updated properties will override the existing ones.","Update the updatedAt property to the current date.","Validate:","value is a positive number.","When a duty is inserted to the database:"]},{"i":"task-4---justice-board","l":"Task 4 - Justice Board","p":["Estimation time: 2 Day","The justice board is an array of objects with the keys:","_id- The unique identifier of the soldier","score- The total value of duties the soldier has been scheduled to.","For example:","Create endpoint for getting the Justice Board:","GET /justice-board","Use mongoDB aggregation to calculate the Justice Board (Why?).","Optional: Create endpoint for getting a soldier's score:","GET /justice-board/:id","Return the soldier's score."]},{"i":"task-5---scheduling","l":"Task 5 - Scheduling","p":["canceled- The duty is canceled.","Create endpoint for canceling a duty:","Create endpoint for scheduling a duty:","Don't allow to cancel a duty that is already canceled.","Don't allow to cancel a duty that is in the past.","Don't allow to schedule a duty that is already scheduled.","Don't allow to schedule a duty that is canceled.","Don't allow to schedule a duty that is in the past.","Estimation time: 4 Days","Fix the Soldiers routes to take into consideration the scheduled duties.","Make sure that the soldiers are not already scheduled to other duties at the same time.","PUT /duties/:id/cancel","PUT /duties/:id/schedule","scheduled- The duty is scheduled.","The Duty status can be one of the following:","The duty status history should be updated with the new status and the current date.","The duty status should be updated to canceled.","The duty status should be updated to scheduled.","The duty statusHistory should be updated with the new status and the current date.","The scheduling process is the process of assigning soldiers to duties. The soldiers' limitations (according to the duty's constraints), the Justice Board, and the rank should be taken into consideration.","unscheduled- The duty is not scheduled yet.","Update the soldiers property in the Duty object (to an empty array).","Update the soldiers property in the Duty object with the scheduled soldiers.","Use the soldiersRequired property to determine how many soldiers should be scheduled.","What will happen if there are not enough soldiers to schedule the duty?"]},{"i":"automatic-scheduling-optional","l":"Automatic Scheduling (Optional)","p":["The auto scheduling mechanism should schedule all unscheduled duties.","Add an auto scheduling mechanism to your app.","The time should be configurable and the default time should be every 5 minutes.","Duty with higher value should be prioritized.","What will happen if there is a change in the Duties or Soldiers collection while the auto scheduling is running?"]},{"i":"task-6---make-it-professional","l":"Task 6 - Make it professional","p":["Estimation time: 2 Days","Add handlers for unhandledRejection and uncaughtException events.","Add handlers for SIGTERM and SIGINT events.","Validate your ENV vars before starting the server.","Add openAPI v3 documentation to your app.","You can use the fastify-swagger plugin to generate the documentation.","Add basic authentication to your app.","Add a rate limiter for your routes.","You can use fastify-rate-limit.","Add README.md to your app. Your readme should include explanation to how to use and test the app.","Optional: Add _link property to your responses."]},{"i":"task-7---extend-query-parameters-optional","l":"Task 7 - Extend query parameters (optional)","p":["A request to /duties?near=32.0853,34.7818radius=1000 should return the duties that are near Tel Aviv (32.0853, 34.7818) with a max distance of 1000 meters.","A request to /duties?populate=soldiers should return the duties with the soldiers property populated with the soldiers data.","A request to /duties?select=name,value should return the duties with only the name and value properties.","A request to /duties?sort=nameorder=desc should return the duties sorted by name in descending order.","A request to /duties?sort=value should return the duties sorted by value.","A request to /justice-board?filter=score=20 should return the justice board with soldiers with score >= 20.","A request to /justice-board?page=2limit=10 should return the justice board with the second page of 10 soldiers.","A request to /justice-board?sort=scoreorder=desc should return the justice board sorted by score in descending order.","A request to /soldiers?select=name should return the soldiers with only the name property.","Ask your mentor which extensions you should implement.","Extend the /duties functionality to accept geo queries.","Extend the /justice-board/soldiers and /duties functionality to accept filtering queries.","Extend the /justice-board/soldiers and /duties functionality to accept pagination.","Extend the /justice-board/soldiers and /duties functionality to accept population of fields.","Extend the /justice-board/soldiers and /duties functionality to accept projection by fields.","Extend the /soldiers and /duties routes functionality to multiple parameters search query.","Extend the he /justice-board/soldiers and /duties routes to accept sorting queries also with desire order.","Filtering","For example:","For example: A request to /duties?name=hagnashsoldiers=mishel,shir should return all hagnash duties that contains both mishel and shir. (Note that a hagnash duty that was scheduled with mishel, shir and david should also be returned).","Geo Queries","Multiple parameters","Pagination","Population","Projection","Sorting"]},{"i":"task-8---make-it-scalable-advanced","l":"Task 8 - Make it scalable (Advanced)","p":["What will happen if you add more soldiers and duties?","You may use this concepts:","Indexing","Pagination","Cache","Job Queue","Who can modified the soldiers and duties?","Authentication","Authorization","What is the performance of your app?","Make a load test to your app. Profile your app and find the bottlenecks."]},{"l":"Next steps","p":["Let's return to a type safe space"]}],[{"l":"NodeJS and JavaScript","p":["Estimation time: 1-4 Days","This is a basic introduction to Node JS and JavaScript.","Learning objectives:","At the end of this learning path, you'll be able to:","Know basic programming using JavaScript","Know JavaScript concepts","Send me back home","[[TOC]]","Learning note: all links in this path are reading tutorials. You can read them but you can watch a youtube crash course. if you find useful links, please share them with me.","Here is some examples links:","MDN web docs","nodejs official learn"]},{"l":"Introduction","p":["JavaScript is a programming language that is used to create web applications.","Node.js is a JavaScript runtime built on Chrome's V8 JavaScript engine.","In Human words: NodeJS is a program that allows you to run JavaScript on any computer (and not just in the browser). So in order to run JavaScript on your computer, you need to install NodeJS."]},{"l":"Install NodeJS using NVM","p":["NVM(Node.js Version Manager) allows you to quickly install and use different versions of node via the command line.","Even if you only need a single version of Node.js right now, It is still recommend using nvm because it allows you to switch between different versions of Node (depending on the requirements of your project) with minimal hassle.","to install nvm:","Check if node is installed:","For more information you can use the repository nvm-sh/nvm","Optional: zsh plugin with lazy load Or Lazy load nvm for faster shell start. If you follow the setup instructions, you already have this plugin."]},{"l":"JavaScript","p":["You should be familiar with the following concepts:","Variables","Operators","Data types","Control flow","Functions","Objects","Classes","Errors","Modules"]},{"i":"javascript---more-topics","l":"JavaScript - More Topics","p":["Here is some concepts that worth knowing, learn them after you understand the basics:","Arrays methods - map, filter, reduce etc.","Spread operator, rest parameters and rest property.","Pass arguments: call by value, call by sharing, call by reference","Copy, deep clone, shallow clone.","this keyword","bind Function prototype method, and arrow functions vs regular functions binding behavior.","Higher order functions","Closures"]},{"i":"javascript---questions-more-topics","l":"JavaScript - questions (More Topics)","p":["Some questions about the more advanced topics:","Create a function circlesArea that get array of numbers - each number represent a radius. The function should return the sum of the areas of all circles that their radius is bigger than 0 and their area is smaller than 100. Round the result to the nearest integer.","For example:","How many statements did you write in the previous question? If you wrote more than one, refactor the code to use only one line (one statement, you can add new lines for readability).","What is the output of this code?","Fix this code so it will work as expected:","What is the output of this code? Why?","Fix the code so there will be no side effects when modifying the copied user.","What is the output of this code? Fix the code.","Bonus (optional): Write a function once that accepts a function fn as input and return a new function that is identical to the original function except that it ensures fn is called at most once.","The first time the returned function is called, it should return the same result as fn. Every subsequent time it is called, it should throw an error with the message \"Function already called\"."]},{"i":"javascript---worth-knowing-advanced","l":"JavaScript - Worth knowing (Advanced)","p":["Some advanced concepts that worth mentioning, don't learn them now but know that they exist:","void operator","Bitwise operators","Unicode","Symbols","Prototypes","Maps, Sets","Iterators","Generators","WeakMaps, WeakSets","Typed Arrays","Proxies"]},{"l":"NodeJS","p":["Node.js is an open-source and cross-platform JavaScript runtime environment. Node.js runs the V8 JavaScript engine, the core of Google Chrome, outside of the browser. This allows Node.js to be very performant.","A Node.js app runs in a single process, without creating a new thread for every request. Node.js provides a set of asynchronous I/O primitives in its standard library that prevent JavaScript code from blocking."]},{"l":"Basic NodeJS Concepts","p":["Before you continue, make sure you are familiar with the following concepts:","Package manger ( npm)","package.json, package-lock.json","File system ( node:fs)","Environment variables ( process.env)"]},{"i":"basic-nodejs---questions","l":"Basic NodeJS - questions","p":["Write a program that reads a text file and counts the number of words in the file. Accept the file path as argument. The program should output the word count.","For example, if the input.txt file contains the following text:","You should run the program like this:","The output should be:","Optional: print the occurrences of each word in the file if the ENV variable DEBUG is set to true."]},{"i":"worth-mentioning-advanced","l":"Worth Mentioning (Advanced)","p":["Additional Topics:","Asynchronous context tracking","Buffers","C/C++ addons","Child Processes","CJS vs ESM","Cluster","garbage collector","libuv","Multi-threading:","Some advanced concepts that worth mentioning, don't learn them now but know that they exist:","Streams","The internal of node.js:","Thread pools","v8","Worker threads"]},{"l":"Tools","p":["pnpm","snyk advisor","npm audit","cSpell"]},{"l":"Next steps","p":["Let's get out of sync!"]}],[{"l":"Testing in Javascript","p":["[[TOC]]","A bit of a high level talk","Also, testing make the future development of the system easier, as we can change the system and be more confident that we didn't break anything.","At the end of this learning path, you'll be able to:","Author: @gthecht","Differentiate between unit, integration and end-to-end tests","Estimation time: 1-2 Days","Here is some examples links:","Learning note: all links in this path are reading tutorials. You can read them but you can watch a youtube crash course. if you find useful links, please share them with me.","Learning objectives:","Needless to say, we usually prefer the second option, as it is usually the cheaper one - it keeps the customer satisfied, and reduces the probability of runaway expenses.","Run the system and when it crashes or we find a bug in production, we fix it","Send me back home","Test the system before deploying it, and trying to catch as many bugs during these tests.","There are several ways to find these bugs:","Therefore in most cases, you'll find some form of tests - be they minimal or elaborate, in order to catch at least some of the more obvious, and more fatal faults.","Understand concepts of testing","When we write software systems, it is often hard to tell if the system is fully working. There are often bugs - either cases where system doesn't behave is planned. This can cause either exceptions - and then the system crashes, or simply faults where we get unwanted behavior which leads to all sorts of complications and expenses.","Write unit-tests in JS"]},{"i":"unit-integration-and-end-to-end-tests","l":"Unit, Integration and End-to-end tests","p":["Learn about the division of tests into these three levels.","A good place to start reading is Michelle Tran's blog You can also check out her links."]},{"l":"Questions","p":["What level of test should be the fastest?","If we want to make sure two systems interact properly, what type of test are we creating?","For each of the three levels of testing, who is responsible for writing these tests, and with whom should he talk about them?","Assuming we made pretty good integration tests, why would we want end-to-end tests as well?","Imagine you are in a startup, which is developing systems quickly, but breaking them constantly. This means that you can't be sure how the systems will interact in future, but the goal of the whole system is to supply some form of service. Which tests would you write and which would you not?"]},{"l":"Unit tests in JS","p":["There are several frameworks for unit tests in JS. The most popular one is jest. You can also check out mocha and Vitest or Node Test Runner.","You can choose to learn any of these frameworks, ask your mentor what is preferred in your team. The important thing is to understand the concepts of unit tests."]},{"l":"Jest","p":["Learn the jest framework for unit-tests in JS"]},{"l":"Things you should know","p":["Expect","Describe","It","Test","Before and After","Coverage"]},{"l":"Mocking","p":["Sometimes we don't want to actually run something, or to interact with the real system. But we do want to assume an interaction with it. Therefore we need to create a mock of the function, in order to test other parts of our system."]},{"i":"things-you-should-know-1","l":"Things you should know","p":["Stubs","Mocks","Spy"]},{"i":"questions-1","l":"Questions","p":["When should we and when shouldn't we use mocking?","What are the dangers of mocks in each of the three levels of tests, and what are the advantages?","code example for spy and stub - ask what to use in different instances","ADVANCED: How are mocks implemented in JS? How do we restore the original function after we mocked it?"]},{"l":"Automatic testing","p":["auto-testing vs. manual testing is a concise summary of the differences with pros and cons."]},{"i":"questions-2","l":"Questions","p":["When should we write automatic tests for end to end tests?","Assuming a backend service (no UX), how would you decide what to test manually and what to test with automation? The division needn't be according to levels, but more about the systems and their behavior. What aspects of a system would help you decide whether to test them manually or not?"]},{"l":"Task","p":["Let's create a banking system. The bank has users - that can be added and closed. When adding a user we put an initial amount of money in the balance. We can also deposit more money or withdraw some.","Furthermore, we can create transactions between users, where we subtract an amount from one user, and add the same amount to the other.","All changes to the balance are written into the transaction array for each user.","Your task is to unit-test that everything works, and fix the bugs if there are any."]},{"l":"Behaviors","p":["First thing to do is think a bit about what sort of behavior we want (you can reread the short description above), and understand what the system is supposed to do.","Now, think of a list of tests you could write that would check whether the system is indeed working as intended.","Think also of some validations that should be done to prevent unwanted behavior:","e.g. We don't want to allow a negative balance to any user","Note:","There can be some tests to each behavior - in that case you can group them within a describe","You don't have to think of all the tests before writing, its just easier for me to group the steps in such a manner","You can also write the tests as empty function - that pass, and fill them out one by one"]},{"l":"Tests","p":["Write the tests, think of what you need to setup before each test (or all tests together). Think of how you cleanup (teardown) those things that could potentially change the output of other tests, and of course that you won't need any more.","Note:","When should you use before/after and when beforeEach/afterEach?","Can you run your tests in parallel or not? Turn your tests into ones you can run in parallel if not"]},{"l":"Fix the code","p":["I hope you have some tests that fail, and not because the tests are faulty. Now its time to fix the code in such a manner that will make your tests pass.","Note:","Don't add arguments that the user needs to supply - that changes the API and isn't needed","Try to keep the changes as simple as possible and the outcome as well"]},{"l":"Using MongoDB","p":["Now we want to change the code so the bank data is held in a mongo DB.","Take the fixed code, and ask your favorite AI-code-bot to swap the bank object for a mongoDB collection.","Copy back the files it generates. We're going to make sure this code works...","So now change the tests you have previously written (I recommend you do this yourself) so they accommodate the changes.","Afterwards, check whether they succeed or fail. If they fail, make sure the tests are correct and then check if there is an issue in the source-code.","Note:","Can you run your tests in parallel or not? Turn your tests into ones you can run in parallel if not","How much time does it take to run the tests now? If its longer than before, by how much?"]},{"i":"mocking-1","l":"Mocking","p":["In order to make the tests run faster, you can change the connection to mongo to a mock.","There are several ways to do so, and jest has a library that specifically mocks mongoDB. But for now I want you to use the more basic mock libraries.","Note:","Where do you want to use a stub, and where a spy?","Make sure you restore the mocks when you cleanup","How long do the tests take now compared to the previous iterations? (If you don't remember, using git will allow you to rerun the previous versions)"]},{"l":"As a server","p":["Now require the AI-chatbot to host the bank system on a server (decide what framework you want to use). Copy the relevant code.","This final version should be a server with routes corresponding to the functions in the initial JS file (user management, withdrawal, deposit and transactions), and that holds the bank data in a mongo connection.","Do you need to write tests for the server? If so, what should they test (assuming that the underlying logic works).","Decide whether you want to create unit tests, or test it manually. Run your thoughts by your instructor. And of course go over the code, I wouldn't trust these AI noobs..."]},{"l":"Integration tests","p":["Now we'll write a module that helps the user keep track of his transactions. Write such a module - it should return the transactions, and group them according to the person to whom the money was sent.","Test how this module integrates with the bank system. These are the basics of integration tests.","Tests to think about:","Test for success (always)","Test failure (user doesn't exist, server is down or not connected, password is wrong, etc.)","Stress tests: How does it behave if there are many requests to the server from many users, or from a user many times?","Test behavior while the balance is changing - how quickly a change is there when we create a transaction?"]},{"l":"Adding a feature","p":["Add the category to all transactions in your code, and the module accordingly, then fix the tests so they pass","But there's something missing... We want to group the transactions according to category. For instance was the transaction a purchase of food, clothes, transportation? Did we receive money as a gift, salary, loan or refund?","Change the tests so they require a transaction category to pass (mind not all tests need those), and then fix the source-code so it passes the tests","Explanation:","How would you add a category to all transactions, withdrawals and deposits?","Integration tests for the transactionTracker's connection to the bank system","Look at your tests, and think what you'd need to change.","Now here you have two options:","Personally I recommend trying out the second option, but you can decide together with your instructor what he recommends.","Possibly tests that check the server routes","Possibly unit-tests for the transactionTracker","So if we pause a moment, we'll notice that we have several layers of tests:","So why would I want you to change the tests before the code itself?","Tests that relate to the mongoDB (whether mocked or not)","There are two reasons, and the relevant one for you depends whether your are a tester, or a developer.","Unit tests for the logic"]},{"i":"im-a-dev","l":"I'm a dev","p":["If so, there is a development paradigm called TDD (test driven development). The idea is that you write unit-tests before you write code. There are all sorts of reasons why some think this is a reasonable idea, and I'll allow you to look for them online.","If so, you'll ask, then why did I not demand from the first task?","Well, two reasons (always two for some reason...s), one is that TDD is hard to implement, especially as a junior dev. I think its worth a try, but I would mostly recommend it to developers with a couple of years under their belt. The other reason being that I wanted to allow you to use automatically generated code and then test it, rather than you feeding the tests into the AI and asking for code."]},{"i":"im-a-qa-and-auto-tester","l":"I'm a QA and auto-tester","p":["If so, than one of the important aspect of being a tester, is to take part in the development process right from the start - the design phases. This allows you to understand how a solution could be tested, and to help guide the solution design to a place that can more easily be validated, and thus - as is your job - reduce the amount of bugs, and create greater confidence in the product.","Until now I wanted to allow you to truly test code, and understand what needs fixing using an automatically generated code, since that increases the chances of you finding bugs due to undefined behavior and not just buggy code.","But now that everything should more or less be running, its time for you to think more maturely, and decide how, using existing tests, you would test a new feature."]},{"l":"Task summary","p":["So, we created a banking system, and looked at how the unit-tests would change according to what lies underneath. In addition, we allowed another to generate code as per our requests, and tested its behavior to make sure there are no bugs, and no loosely defined behavior.","Following that, we created a simply module, and tested the integration between the module and server. This allowed us to see the difference in the design and responsibilities of unit tests versus integration tests.","Lastly, we added a new feature to the design, and learned how the tests on multiple levels needed to change to accommodate the new feature.","Hope you enjoyed playing around with tests..."]}],[{"l":"Typescript","p":["[[TOC]]","At the end of this learning path, you'll be able to:","Estimation time: 1-2 Days","Here is some examples links:","Learning note: all links in this path are reading tutorials. You can read them but you can watch a youtube crash course. if you find useful links, please share them with me.","Learning objectives:","No BS TS Youtube Crash Course","Run TS project","Send me back home","This is a basic introduction to Typescript.","Total typescript interactive course","Type Challenges Repo- A collection of TypeScript type challenges","Typescript handbook","TypeScript is a strongly typed programming language that builds on JavaScript, giving you better tooling at any scale.","Typescript official website","Write an efficient type-safe code in TypeScript"]},{"l":"Get Started with typescript","p":["You can start \"playing\" with typescript online in sandbox.","In order to run it locally we need to install typescript and then compile our code into executable javascript."]},{"l":"Install","p":["TypeScript is available as a package on the npm registry.","You can install it as dev-dependency in your project using:","if you want typescript support in node: imports and global node variables you need to install @types/node","Side Note: Sometimes You will need types in the declaration file. If so install the types as dependencies. You can read this for more information."]},{"l":"TSConfig","p":["Typescript compiler needs instructions to compile. We can specify the compiler options in config file called tsconfig.","You can initialize the compiler options using tsc cli --init flag:","This will create a basic tsconfig.json file.","My recommended tsconfig.json for modern node applications is:","compilerOptions:","module: NodeNext- Tells TS that this project use ES Modules (And the module resolution is NodeNext)","target: ESNext- Tells TS that it's okay to output JavaScript syntax with new features instead of embedding a polyfill.","strict: true- Tells TS to enables a wide range of type checking behavior that results in stronger guarantees of program correctness.","noUncheckedIndexedAccess: true- Tells TS to add undefined to any declared via index signatures field in the type.","skipLibCheck: true- Tells TS to skip type checking of all declaration files (*.d.ts). This can save time during compilation and solve incompatibly issues between libraries.","Here is a recommended tsconfig.json file:","You can run this script in your terminal to create the file:","Here is the full TSConfig Reference"]},{"l":"Basic Compile","p":["You can use the tsc cli using npx:","Or you can create a npm script:","In your package.json:","And then:","Test it! create .ts file and run the compile .js."]},{"i":"typescript-execute---tsx-optional","l":"TypeScript Execute - tsx (Optional)","p":["tsx (TypeScript eXecute - do not confuse with React's TSX files which stand for TypeScript XML) is a TypeScript runtime that allows you to execute TypeScript files directly.","This tool is useful for running TypeScript files without the need to compile them to JavaScript first.","You can use it without any setup using npx:","You can read more in the tsx repo."]},{"i":"ts-node-optional","l":"ts-node (Optional)","p":["ts-node is a TypeScript execution engine and REPL for Node.js. It \"Just In Time\" (JIT) transforms TypeScript into JavaScript, enabling you to directly execute TypeScript on Node.js without precompiling.","Install it as a devDependency:","And then run your file:","You can add it to your npm scripts:","If you like to use esm(and you should) you can use it as a loader to your file:","If you use ts-node I recommend to add the configuration to the tsconfig file as ts-node.","You can read more in the ts-node docs."]},{"i":"other-js-runtime-advanced","l":"Other JS runtime (Advanced)","p":["Some modern JavaScript engines runtime come with built-in support for TypeScript:","Deno is a modern runtime for JavaScript and TypeScript that uses V8 and is built in Rust. Deno has \"First-class\" support for TS and its \"Understand\" (Using JIT) Typescript so you execute your .ts using deno.","Bun is a modern JavaScript runtime like Node or Deno. Bun uses the JavaScriptCore engine and was written in ZIG. Bun is designed as a drop-in replacement for your current JavaScript & TypeScript apps or scripts so you can run .ts files directly."]},{"i":"typescript---the-basics","l":"TypeScript - The basics","p":["any and unknown","Array","Function type expression","Functions","Global utility Types (e.g Omit, Record, Promise, etc.)","Interfaces","Intersection Types ()","keyof type operator","Narrowing and Type guards","null, undefined, void, and never","Object types","Parameter Destructuring in functions","Passing Type Arguments ( Type)","string, number, and boolean","Tuple","Type Aliases ( type)","Type Assertions ( as, !)","typeof type operator","Union Types (|)","You can read them all in the TypeScript Handbook. Especially the everyday-types","You should be familiar with the following concepts:"]},{"l":"Beginners Typescript Workshops","p":["Here is a great tutorial for all the basics. Do it yourself \uD83D\uDE04"]},{"i":"questions---basic-typescript","l":"Questions - Basic Typescript","p":["Take the following code and paste it in new test.js","Run it using node test.js and see the error.","What is the problem?","How typescript can help me?","Create test.ts file and fix the code so it will not compile.","What is the problem? Fix it.","If you can't see the problem paste the code to TS Playground and see the error."]},{"i":"working-with-ts---my-recommendations","l":"Working With TS - My Recommendations","p":["Write a little TS as you can! TS is very \"smart\" and most of the time inferred types will be more \"specific\". Also this will help your code readability.","Don't declare types in variables","Prefer to not declare return types of simple functions","Don't use enums, prefer union types or as const objects.","Don't use Function, Object, String, Number, and Boolean(Capital letters) and object- they are not doing what you think they are doing.","Be careful with .json()(in fetch response) and JSON.parse() as they both return any. You can cast them to unknown(or use ts-reset to do it for you)","I Prefer type aliases over interfaces for \"everyday\" types. If you using Object Oriented Programming you can use interfaces but keep in mind the merge behavior of interfaces."]},{"l":"Runtime checks with TypeScript","p":["TypeScript is lived in \"compile-time\", which make its great for checking variables at the type level (developer \"linting\"). However, during \"runtime\", JavaScript is the only language that is executed. Therefore, it is necessary to validate user input against schema validation in JavaScript.","In many cases there is a strong corelation between types and runtime schemas, and duplicating type declarations in both schema and types can be cumbersome."]},{"l":"Zod","p":["Zod is a TypeScript-first schema declaration and validation library.","The goal is to eliminate duplicate type declarations. With Zod, you declare a validator once and Zod will automatically infer the static TypeScript type. It also allows for easy composition of simpler types into complex data structures.","If you wish to use Zod with Fastify app, you can use fastify-type-provider-zod library."]},{"i":"zod-tutorial-optional","l":"Zod tutorial (optional)","p":["You can do this tutorial which is a set of zod exercises for you to work through."]},{"i":"typebox-optional","l":"TypeBox (optional)","p":["TypeBox is a JSON Schema Type Builder with Static Type Resolution for TypeScript.","With typebox you define your schema within your code and use them directly as types or schemas as you need them (like zod).","TypeBox is great for working with Fastify in TS because the validation in Fastify uses JSON Schema. Moreover, defining schemas for your Fastify can increase their throughput. To use it in your Fastify you will need fastify type-provider.","For more information you can read in the Fastify typebox doc."]},{"i":"typescript---more-topics-optional","l":"TypeScript - More Topics (optional)","p":["Generics","Literal Types and as const","Indexed Access Types (such as T[key], T[string] etc.)","Index Signatures (such as [index: string]: number)","extends keyword"]},{"i":"questions---more-topics","l":"Questions - More Topics","p":["Fix the code so it will Error only in errVeryStr","Fix the code so addFullName function will get any object that satisfies UserShape:","What is the problem with this code? Can you fix it?","Change the SatelliteName type so it will error on the last line:","Change the SatellitesCompaniesNames type so it will error on the last line:"]},{"i":"typescript---advanced-optional","l":"TypeScript - Advanced (optional)","p":["Note: This section is advanced, you can ask your mentor what to learn from this section.","Enums","type predicates ( is)","Recursive Types","Discriminated unions","Exhaustiveness checking","Function Overloads","infer keyword","satisfies operator","Conditional Types","Distributive Conditional Types ( T extends T vs [T] extends [T])","Mapped Types ( in)","Template Literal Types","using operator","Decorators"]},{"i":"questions---advanced","l":"Questions - Advanced","p":["Fix this code so it will error","Create a type \"function\" which generate tuple types. For Example:","Fix the type of this group function:","Fix the Tuple implementation so it will work with distribute over union types:","Fix the types of this curry helper function:"]},{"l":"Project","p":["Talk with your mentor about the project."]},{"i":"worth-knowing-optional","l":"Worth knowing (optional)","p":["These concepts are worth mentioning but don't learn them now.","Declaration Files","Mixins","Module Resolution"]},{"i":"further-reading-optional","l":"Further Reading (optional)","p":["TypeScript and Set Theory"]},{"l":"Tools","p":["tsx","tsconfig-paths","pretty-ts-errors","ts-reset","tsup- Bundle your TypeScript library with no config, powered by esbuild.","papr- lightweight library built around the MongoDB NodeJS driver, written in TypeScript"]}],[{"l":"Basic Web Development","p":["Under construction...","HTML-CSS","JavaScript"]}],[{"l":"HTML","p":["Under construction..."]}],[{"l":"Javascript","p":["Under construction..."]}],[{"l":"Code Design","p":["Author: @gthecht","Code Design is a collection of methods and techniques that are used to design and implement software.","Send me back home","[[TOC]]","Here is some video about code design:"]},{"l":"Beginner"},{"l":"Object oriented programming","p":["Intro to Object Oriented Programming - Crash Course(30 minutes)"]},{"l":"Functional programming","p":["Functional Programming in 40 Minutes • Russ Olsen • GOTO 2018(40 minutes)"]},{"i":"code-examples-for-procedural-oop-and-functional-programming","l":"Code examples for procedural, OOP and functional programming","p":["Functional, Procedural & Object-oriented Programming - An Overview(40 minutes)"]},{"l":"Clean code and design","p":["Clean code - uncle Bob / lessons 1-4 (5.5 hours)","Clean Code - Uncle Bob / Lesson 1(2 hours)","Clean Code - Uncle Bob / Lesson 2(1 hour)","Clean Code - Uncle Bob / Lesson 3(1 hour)","Clean Code - Uncle Bob / Lesson 4(1.5 hours)"]},{"l":"Extras","p":["Watch videos 5 and 6 for more talk about overall design and workflows."]},{"l":"Intermediate","p":["Continued Learning: The Beauty of Maintenance - Kent Beck - DDD Europe 2020(50 minutes)"]},{"l":"Expert"}],[{"l":"Setup for Windows","p":["Lets prepare the space environment for you!","Send me back home","[[TOC]]"]},{"l":"1. Set up WSL","p":["Wsl (Windows Subsystem Linux) is a Linux environment that runs on Windows. You can read more about it here."]},{"i":"11-install-wsl","l":"1.1. Install WSL","p":["Open PowerShell (or Windows Command Prompt) as an admin:","Right click on PowerShell","Click \"Run as administrator\" and enter:","Check the troubleshooting installation article if you run into any issues."]},{"i":"12-set-up-your-linux-username-and-password","l":"1.2. Set up your Linux username and password","p":["Once the process of installing your Linux distribution with WSL is complete, open the distribution (Ubuntu by default) using the Start menu. You will be asked to create a User Name and Password for your Linux distribution. This account will be considered the Linux administrator, with the ability to run sudo(Super User Do) administrative commands.","For more information, see this article."]},{"i":"13-set-up-windows-terminal-recommended","l":"1.3. Set up Windows Terminal (Recommended)","p":["Windows Terminal can run any application with a command line interface.","Also, it comes with Quake mode which allows you to quickly open a new terminal instance from anywhere in Windows by typing Win+`. It is a great way to run commands on your Linux distribution.","Windows Terminal is built in Windows 11. To install you can follow the installation guide."]},{"l":"Set your default profile","p":["On windows terminal, enter ctrl + , to open setting.","Select Startup and choose Ubuntu as your default profile.","To move between tab terminals, use ctrl+tab and ctrl+shift+tab. To close a tab in terminal, enter ctrl+shift+w. To open a new tab, enter ctrl+shift+T."]},{"i":"14-update-and-upgrade-packages","l":"1.4. Update and upgrade packages","p":["It is recommended to update and upgrade your packages before you start using your Linux distribution."]},{"i":"15-install-zsh-recommended","l":"1.5. Install zsh (Recommended)","p":["Zsh is a shell designed for interactive use, although it is also a powerful scripting language.","Configure zsh to be the default shell:","You can check your shell by running echo $SHELL."]},{"i":"16-install-oh-my-zsh-recommended","l":"1.6. Install oh-my-zsh (Recommended)","p":["Oh My Zsh is a open source framework for managing your Zsh configuration.","Before all we need to have git installed:","Then, use curl to install oh-my-zsh:"]},{"l":"Antigen","p":["Antigen is plugin manager for zsh.","Install it:","Configure zsh with antigen:","Open .zshrc in your editor ( nano ~/.zshrc or code ~/.zshrc)","Delete all the lines in .zshrc","Replace it with the following (my recommended configuration):","You can Change the Theme of oh-my-zsh! look it up if you like"]},{"l":"2. Install VS code","p":["VS Code (Visual Studio Code) is a source-code editor made by Microsoft including support for debugging, syntax highlighting, intelligent code completion, snippets, code refactoring, and embedded Git.","In order to use VS code in your WSL First install VS code in Windows and then the Visual Studio Code Remote - WSL Extension."]},{"i":"21-install-vs-code-on-windows","l":"2.1 Install VS code on Windows","p":["Install VS Code on the Windows side (not in WSL)."]},{"i":"22-install-vs-code-on-wsl","l":"2.2 Install VS code on WSL","p":["Install the Remote Development extension pack.","Now we can open Workspace from the terminal using the code command:","Or navigate to workspace first and then use code:","For more information, About working with VS code on WSL see Developing in WSL."]},{"l":"3. Install Docker Desktop","p":["Docker Desktop for Windows provides a development environment for building, shipping, and running dockerize apps. By enabling the WSL 2 based engine, you can run both Linux and Windows containers in Docker Desktop on the same machine.","Note: While Docker Desktop supports running both Linux and Windows containers, you can not run both simultaneously. To run Linux and Windows containers simultaneously, you would need to install and run a separate Docker instance in WSL."]},{"i":"31-sign-up-for-a-docker-id-at-docker-hub-optional","l":"3.1 Sign up for a Docker ID at Docker Hub (optional)","p":["Docker Hub is a service for finding and sharing container images with the Docker community.","SignUp link"]},{"i":"32-install-docker-desktop-on-windows","l":"3.2 Install Docker Desktop on Windows","p":["Download Docker Desktop and follow the installation instructions.","Ensure that \"Use the WSL 2 based engine\" is checked in Settings > General.","Use the WSL 2 based engine","Select from your installed WSL 2 distributions which you want to enable Docker integration on by going to: Settings > Resources > WSL Integration.","To confirm that Docker has been installed, open a WSL distribution and display the version and build number by entering: docker --version, and docker run hello-world.","For more information, see wsl-containers"]},{"i":"advanced-links-skip","l":"Advanced links (skip)","p":["antidote- feature-complete Zsh implementation which was derived from Antigen.","starship- cross shell customizable prompt","Install a Nerd Font on windows terminal"]},{"l":"Next steps","p":["Congratulations! You are now ready to start learning!"]}],[{"l":"Welcome Aboard to the New space","p":["This is the training path for you to became a Space Super-gun Developer \uD83D\uDE80"]},{"l":"General instructions","p":["All the learning instructions are just a recommendation, you can learn whatever you want!","You can search for the topic in google, watch an online tutorial, or just learn by yourself.","Development is a self-learning process, and you know what the best way to learn is for you."]},{"l":"Next steps","p":["Confused? Start here","Here is an Index"]},{"i":"author-davidbk","l":"Author: @DavidBK"}]]